import numpy as np
import pandas as pd

class GPTiny:
    def __init__(self):
        pass

    def GPI(self, data):
        return (1.000000*np.tanh(np.where(data["High"] > (data["Close_Div"] + data["Open_7_SD"])/2.0  * -1., ((data["Open_28_SD"] + data["Open_28_SD"]) + ((((-0.024146) + (data["Open_28_SD"] + data["Open_7_SD"])) + (data["Close_Div"] + data["Open_7_SD"])/2.0  * -1.) + data["Open_7_SD"]))/2.0  * (-0.024146), 0 )) +
                0.992126*np.tanh(np.where((0.166616) <= data["Volume_21_MN"], np.where((data["Close_7_SD"] / 2.0 / 2.0 + ((0.030141) + (0.030141)))/2.0  > data["Low_7_SD"], data["Low_7_SD"], 0 ) / 2.0, 0 )) +
                1.000000*np.tanh((0.007006) * 2.0 * data["Open"] * -1.) +
                0.897638*np.tanh(data["High_7_MN"] * 2.0 * 2.0 * (0.156671) * np.where(np.where(np.where((0.156671) > data["Open"], data["High_7_MN"], 0 ) * 2.0 > np.where(data["High_7_MN"] > data["Volume_7_MN"], data["Open"], 0 ), np.where(data["Volume_14_MN"] > data["Open"], data["Volume_14_MN"], 0 ) * 2.0, 0 ) <= data["Open"], (0.156671) * -1., 0 )) +
                0.984252*np.tanh(np.where(data["Close_Div2"] <= data["Close_7_MN"], np.where((data["Close_Div2"] + np.where((-0.007573) <= data["Close_7_MN"], np.where(data["Close_7_MN"] <= data["Volume_7_MN"], (-0.007573) * (0.015195), 0 ), 0 ))/2.0  <= (-0.007573), np.where((-0.007573) <= data["Volume_7_MN"], (0.015195) * 2.0 * 2.0 * (0.015195), 0 ), 0 ), 0 )) +
                1.000000*np.tanh(data["Low_28_MN"] * ((0.008888) + ((0.017963) - (np.where((0.017963) <= data["Close_7_MN"], data["Close"] * 2.0 * 2.0 * 2.0, 0 ) + data["Close"])/2.0  * ((0.017963) - data["Close"] * 2.0 * 2.0 * 2.0 * data["Close"]))) * 2.0) +
                1.000000*np.tanh(np.where(data["Low_14_SD"] > (data["Close_21_MN"] + (0.013494)), data["Low_14_SD"] * ((0.019793) * -1. + np.where((0.088492) <= (data["Close_21_MN"] + ((0.013494) * -1. + data["High_7_SD"])), (((data["Close_21_MN"] + data["Close_21_MN"]) + (0.088492)) + data["High_7_SD"]), 0 ))/2.0 , 0 )) +
                0.937008*np.tanh(data["Volume_7_MN"] * (data["Volume_28_SD"] * (data["Volume_7_MN"] * (data["Low_14_SD"] + data["Low_14_SD"] * data["Volume_28_SD"]) + data["Low_14_SD"]) + (0.088492)) * np.where(data["Open_7_SD"] > (data["Low_14_SD"] + (0.088492)) / 2.0, data["Volume_14_MN"] / 2.0 * -1., 0 )) +
                0.866142*np.tanh(np.where((np.where((0.011141) <= data["Low_Div2"], (data["Low_7_SD"] + data["Close_28_SD"]), 0 ) + data["Low_7_SD"]) <= data["Low_Div2"], (0.009893) * ((((data["Low_Div2"] + (0.011141)) + (0.011141)) + (0.009893)) + (0.009893)) * -1., 0 ) * -1.) +
                0.984252*np.tanh(np.where(data["Close_Div"] > data["High_7_MN"], np.where(data["Close_Div"] * -1. > data["Close_7_MN"], (-0.002087) * ((data["Volume_Div2"] + ((1.067290) + (((-0.002087) * -1. + (1.067290))/2.0  + (1.067290))/2.0 ))/2.0  * -1. + data["Volume_7_MN"])/2.0  / 2.0, 0 ), 0 ) * -1.) +
                0.834646*np.tanh(np.where(data["High_7_MN"] > (0.004684), (0.047285), 0 ) * np.where(data["Open_28_MN"] > np.where((0.008440) > (data["Open_28_MN"] + np.where(data["Open_Div"] > (0.047285), (0.008440), 0 ))/2.0 , data["Open_Div"], 0 ) * ((0.008440) + data["Open_Div"])/2.0 , data["Open_Div"], 0 ) * -1.) +
                1.000000*np.tanh(data["Open_14_MN"] * (np.where((((0.025175) + ((0.025175) + (0.018097))) + data["Open_14_MN"]) > data["Volume_14_MN"], np.where((-0.003794) > data["Open_14_MN"], (((0.025175) + (0.025175)) + (0.018097)), 0 ), 0 ) + np.where(data["Close_7_MN"] > data["Volume_21_MN"], (0.025175), 0 )) * -1.) +
                0.881890*np.tanh((-0.004151) * ((data["Close_21_SD"] - (((-0.004151) - (data["Open_14_SD"] - (data["Close_21_SD"] + (data["Close_21_SD"] + (data["Low_7_SD"] - data["Low_28_SD"]))/2.0 )/2.0 ) * 2.0 * 2.0 * 2.0) + data["Close_21_SD"])/2.0 ) * 2.0 - (0.015599)) * 2.0 / 2.0) +
                0.992126*np.tanh(data["Open_28_MN"] * (np.where((0.025567) <= np.where((0.025567) <= (data["Open_28_MN"] + (data["Open_28_MN"] + data["High"])), data["High"], 0 ) * 2.0, data["Open_Div2"], 0 ) * 2.0 + ((0.025567) + (data["Open_28_MN"] + np.where((0.025567) <= data["High"], data["Open_Div2"], 0 ) * 2.0)))/2.0 ) +
                0.929134*np.tanh(np.where(((0.009655) + data["Open_Div2"] / 2.0)/2.0  <= (data["Open_21_SD"] * -1. * 2.0 + (data["Open_Div2"] + data["Open_21_SD"] * data["Open_Div2"] / 2.0) * -1.), (0.009655) * -1. / 2.0 * data["Open_Div2"] * 2.0, 0 )) +
                1.000000*np.tanh(np.where(data["High_28_SD"] <= (((0.009308) + data["Open_21_SD"]) + data["Open_21_SD"] * 2.0), np.where((data["Open_21_SD"] + (0.009308)) <= data["High_28_SD"], np.where(data["Close_28_SD"] / 2.0 > ((0.009308) + data["Open_21_SD"]), ((0.009308) + data["High_28_SD"]), 0 ) * 2.0 * data["Close_28_SD"], 0 ), 0 )))

    def GPII(self, data):
        return (1.000000*np.tanh(data["Low_21_SD"] * np.where(data["High_21_SD"] > data["Close_Div"], np.where(np.where(np.where((0.088492) > data["Low_14_SD"], np.where(data["Open"] > data["Close_Div"], data["Open"], 0 ), 0 ) > data["Close_Div"] * -1., (0.088492), 0 ) > data["Low_21_SD"], (0.088492), 0 ), 0 ) * -1. / 2.0 * -1. * -1.) +
                1.000000*np.tanh(data["Low_14_MN"] * -1. * (data["Open"] + (data["Low_21_SD"] + ((((0.059945) + data["High_Div"]) + (0.059945)) + (data["High_Div"] + ((data["High_Div"] + data["Low_21_SD"]) + data["Low_14_MN"] * -1.))))/2.0 )/2.0 ) +
                1.000000*np.tanh(data["Low_28_MN"] * (((0.076136) - (0.322922) * ((0.076136) - data["Low_28_MN"] * 2.0 * 2.0 * 2.0 * 2.0 * 2.0 * ((data["Close_7_MN"] - data["Volume_7_MN"]) - data["Volume_14_MN"])) * -1.) - data["Open_28_SD"] * 2.0)) +
                0.976378*np.tanh((data["Low"] - ((data["Low_14_SD"] * -1. + data["Low_14_SD"] * (data["Low_14_SD"] + data["Low_14_SD"])) + ((data["Low_28_SD"] + data["Low_14_SD"]) - data["Low"]) * data["Low_14_SD"])) * data["Low_28_SD"] * -1. / 2.0) +
                1.000000*np.tanh((((data["Volume_28_MN"] - data["High_14_SD"]) + (0.009483)) + (0.014191)) * ((0.009483) * ((((data["Volume_28_MN"] - data["Close_7_SD"]) - data["High_14_SD"]) - data["High_14_SD"]) * 2.0 - data["High_14_SD"]) * 2.0 * 2.0 + (0.014191)) / 2.0) +
                1.000000*np.tanh(((data["High_7_MN"] + (data["Open_7_MN"] + (((data["High_7_MN"] + data["High_7_MN"]) + (0.014191)) + (data["Open_7_MN"] + (data["Open_7_MN"] + data["Open_7_MN"]))))) * data["Low_21_SD"] * -1. + (data["Open_7_MN"] + (0.014191))) * data["High_7_MN"] * -1.) +
                0.905512*np.tanh(((data["High_21_MN"] + (data["Close_7_SD"] + data["High_21_MN"])) + (data["Open_7_MN"] * (((data["Close_14_SD"] + (data["Close_14_SD"] + data["Close_7_SD"])) + (data["Close_14_SD"] + data["Close_14_SD"])) * 2.0 + data["Close_14_SD"]) * 2.0 + data["Close_7_SD"])) * data["High_21_MN"]) +
                1.000000*np.tanh(np.where(np.where((data["Volume_7_MN"] + (data["Volume_7_MN"] + (0.085013))) * -1. <= (data["Volume_7_MN"] + data["Low_14_SD"]), data["Low_14_SD"] * -1., 0 ) > data["Volume_7_MN"], data["Low_14_SD"] * -1. * (0.008123), 0 )) +
                1.000000*np.tanh(((0.019793) + ((0.017963) + (0.019793))) * ((-0.018133) * data["Volume"] * data["Volume"] + (np.where(data["Volume_7_MN"] > (0.017963), (-0.018133) * data["Volume"], 0 ) - (data["Open_14_MN"] - (0.019793) * data["High_21_SD"])))/2.0 ) +
                1.000000*np.tanh(np.where(data["High_7_SD"] / 2.0 / 2.0 > data["Close_7_MN"] / 2.0, ((0.012000) + np.where(data["Close_7_MN"] > np.where(data["Close_7_MN"] / 2.0 > (0.012000), data["Close_21_SD"], 0 ) / 2.0, data["Close_21_SD"], 0 ))/2.0 , 0 ) * ((0.012000) + np.where(data["Close_21_SD"] > data["High_7_SD"] / 2.0, data["Close_21_SD"], 0 ))/2.0 ) +
                1.000000*np.tanh((0.011265) * np.where((data["Open_28_SD"] + (data["Open_28_SD"] + data["High"])/2.0 )/2.0  * ((data["Open_28_SD"] + ((data["High"] + (data["Open_28_SD"] + (0.010612))/2.0 )/2.0  + (0.011265))/2.0 )/2.0  + data["Open_28_SD"])/2.0  > (0.011265) * data["Open_28_SD"], data["Open_28_SD"], 0 ) * -1.) +
                1.000000*np.tanh(np.where((-0.002087) <= data["Close_7_SD"] * -1., np.where(np.where(data["High_28_MN"] > data["Open_14_MN"], (-0.002087), 0 ) <= np.where(data["Open_14_MN"] > np.where(data["High_28_MN"] * -1. > data["Close_7_SD"] * -1., (-0.002087), 0 ) * -1., (-0.002087), 0 ), data["High_28_MN"] * -1., 0 ), 0 ) / 2.0) +
                1.000000*np.tanh(np.where(data["Volume_7_MN"] > data["Open_7_SD"] * 2.0 * 2.0, (0.003301) * (((np.where(data["Open_14_MN"] > (0.003301), (0.030141), 0 ) * 2.0 * 2.0 + (0.030141)) * 2.0 + (0.030141))/2.0  * 2.0 + np.where((0.030141) > data["Open_28_SD"], (0.030141), 0 ))/2.0 , 0 )) +
                0.937008*np.tanh(np.where(((data["High_7_SD"] - np.where(data["Open_Div"] > (0.207162) * -1., np.where((0.207162) > data["High_7_SD"], data["Close_Div"], 0 ), 0 ) * -1. * data["Close_Div"]) - data["Open_28_SD"] * data["Close_Div"]) > (0.207162), (0.018504), 0 )) +
                1.000000*np.tanh((0.014573) * np.where((0.003301) > data["Open_Div"],  0.376867  * -1. * (((data["Open_28_SD"] + ((data["Open_28_SD"] + ((data["Volume_28_MN"] + data["Open_Div"])/2.0  + (data["Open_28_SD"] + data["Open_Div"]))) + data["Open_Div"])) + data["Open_Div"]) + data["Open_Div"]), 0 )) +
                1.000000*np.tanh(data["Low_14_SD"] * (np.where((0.010261) <= data["Close_7_MN"], (np.where(data["Open_28_MN"] <= data["Close_Div"], (data["Open_28_MN"] * -1. - data["Open_28_MN"]), 0 ) - np.where(data["Volume_Div"] <= data["Low_14_SD"] * -1., ((0.030141) * -1. - data["High_7_SD"]), 0 ) * -1.), 0 ) - data["Open_28_MN"] * -1.)))

    def GPIII(self, data):
        return (1.000000*np.tanh(np.where(data["Low_21_SD"] <= data["High"] * 2.0 * 2.0 * 2.0 * 2.0 * 2.0 * 2.0 * 2.0, data["Low_21_SD"] * ((-0.048822) + (((-0.048822) + (data["Low_21_SD"] + data["Low_21_SD"] * 2.0) * data["Low_21_SD"]) + data["Volume_28_MN"])) / 2.0, 0 )) +
                0.968504*np.tanh((0.008798) * ((data["Volume_14_MN"] + (np.where(data["Volume_21_MN"] * (data["Volume_21_MN"] + data["High_21_SD"])/2.0  > data["High_21_SD"],  3.0 , 0 ) + np.where(data["Volume_21_MN"] * ((0.016229) + ((0.011828) + data["Volume_21_MN"])/2.0 )/2.0  > data["High_21_SD"],  1.0 , 0 ))/2.0 )/2.0  + (0.008798))/2.0 ) +
                1.000000*np.tanh(data["Open_28_SD"] * (((data["High_14_SD"] + ((data["Close_Div"] + (data["High_14_SD"] + (data["High_14_SD"] + (data["High_14_SD"] + data["Close_Div"])/2.0 )/2.0 )/2.0 )/2.0  + (data["Close_Div"] + data["High_14_SD"]))/2.0 )/2.0  + (data["Close_Div"] + data["High_14_SD"]))/2.0  + (-0.001784))/2.0  * -1.) +
                0.992126*np.tanh(np.where(data["High_14_SD"] * 2.0 <= (data["Low_Div2"] + (data["Low_Div2"] + (0.023188))/2.0 )/2.0 , np.where(data["Open_14_SD"] * 2.0 <= (data["Low_Div2"] + (0.030141))/2.0 , (0.030141) * ((data["Low_Div2"] + ((data["High_14_SD"] + data["High_14_SD"])/2.0  + (0.030141))/2.0 )/2.0  + (0.030141))/2.0 , 0 ), 0 )) +
                1.000000*np.tanh(np.where(data["Volume"] / 2.0 > data["Volume_7_MN"], np.where((0.243723) > np.where((0.243723) > data["Open_Div2"] * data["Open_Div2"], data["Open_Div2"], 0 ) * data["Volume"] * data["Volume"] * -1., data["Open_Div2"] * (0.009893), 0 ), 0 ) * -1.) +
                1.000000*np.tanh(data["Open_28_SD"] * np.where(data["Open_28_SD"] > np.where(data["High_28_MN"] > data["Close_7_MN"], data["High_28_MN"], 0 ), np.where(data["Open_28_SD"] > data["High_28_MN"], np.where(data["Open_28_SD"] > np.where((0.008004) > data["High_28_MN"], (data["Close_7_SD"] - data["Open_7_MN"]), 0 ), np.where(data["Close_7_MN"] > (0.008004), (data["Close_7_SD"] - (0.076136)), 0 ), 0 ), 0 ), 0 )) +
                1.000000*np.tanh(((((data["Open_14_MN"] - (0.026995) * -1.) - ((((data["Open_14_MN"] - data["Close_7_SD"] * -1.) - data["Open_7_SD"]) - data["Close_7_SD"] * -1.) - data["Open_7_SD"]) * -1.) - data["Open_7_SD"]) + data["Close_7_SD"]) * data["High_28_MN"]) +
                0.992126*np.tanh((0.016229) * np.where(data["Open"] > ((data["Close_21_SD"] + data["Open"])/2.0  + (0.016229))/2.0 , ((np.where(data["Open"] > (0.016229), (((data["Close_21_SD"] - (0.030141)) - data["Open"]) - data["High_28_SD"]), 0 ) - data["High_28_SD"]) - data["Open"]), 0 ) / 2.0) +
                0.921260*np.tanh(np.where(data["Open_28_SD"] <= (data["Low_7_MN"] + data["Close_14_SD"]), (np.where(data["Close_14_SD"] > (data["Low_7_MN"] + data["Low_28_MN"]), data["Low_28_MN"], 0 ) + np.where(data["Open_28_SD"] > (data["Low_28_MN"] + data["Low_7_MN"]), np.where(data["Close_7_SD"] > data["Open_28_SD"], data["Low_28_MN"], 0 ), 0 ))/2.0  / 2.0 / 2.0, 0 )) +
                1.000000*np.tanh(np.where(data["Close_28_SD"] <= data["Close"], data["Close"], 0 ) * np.where(data["Close"] <= np.where(data["Volume_21_MN"] <= np.where(np.where(data["Volume_21_MN"] <= data["Close_28_SD"], (0.030141), 0 ) <= data["Close"], (0.030141), 0 ), (0.030141) * 2.0, 0 ), np.where((0.019793) <= data["Close"], (0.030141) * 2.0, 0 ), 0 )) +
                1.000000*np.tanh(((0.010342) + (data["Close"] * -1. + data["Close_21_SD"]) * 2.0 * 2.0 * 2.0 * data["Close_14_MN"] * -1. * ((0.013264) * -1. + data["Close_21_SD"]) * 2.0 * 2.0) * 2.0 * 2.0 * data["Close_14_MN"] * -1.) +
                1.000000*np.tanh((0.004541) * np.where((0.003954) > data["Close_7_MN"] * 2.0 * 2.0 * 2.0, np.where(data["High_7_SD"] > (0.003954), np.where(data["Open_7_SD"] > data["High_Div2"] * -1., np.where(data["Open_7_SD"] > data["High_Div2"] * 2.0 * 2.0, data["Close_7_MN"] * 2.0 * 2.0, 0 ) * 2.0, 0 ), 0 ), 0 ) * 2.0) +
                1.000000*np.tanh(np.where(((0.013494) + (0.013494) * 2.0) / 2.0 > data["Volume_21_MN"], data["Low_Div2"] * (data["Close_28_SD"] + (data["Close_28_SD"] - (((0.013494) + data["Volume_21_MN"] * (0.013494)) + data["Low_Div2"] * data["Close_28_SD"]) * 2.0)) / 2.0 * -1., 0 )) +
                0.992126*np.tanh(data["Open_Div"] * data["Low_28_MN"] * -1.) +
                1.000000*np.tanh(np.where(np.where(data["Open_Div2"] <= data["Close_21_SD"], data["Close_21_SD"] / 2.0, 0 ) <= (0.009893) * 2.0, (data["Close_21_SD"] + (0.009893))/2.0 , 0 ) * 2.0 * np.where(data["Open_7_SD"] / 2.0 <= np.where(data["Open_7_SD"] / 2.0 <= data["Open_Div2"], (0.009893) * 2.0, 0 ), data["Close_21_SD"], 0 )) +
                0.944882*np.tanh(data["Open_14_SD"] * np.where((data["Open_14_SD"] + data["Open_Div2"])/2.0  > ((0.009853) + (0.009853) * -1. * data["Open_Div2"])/2.0 , np.where(data["Open_Div2"] <= (0.009853), np.where(data["Open_Div2"] <= (data["Open_14_SD"] + (0.009853) * -1.)/2.0 , (0.011141) * -1. * 2.0 * 2.0, 0 ), 0 ), 0 )))

    def GPIV(self, data):
        return (1.000000*np.tanh(np.where((data["Low_14_SD"] - data["Open"] * -1.) > data["Open_Div2"], (-0.048822) * -1. / 2.0, 0 ) * (data["Low_14_SD"] - (data["Open_Div2"] + (data["Open"] - data["Low_14_SD"] * -1.))/2.0  * -1.) * -1.) +
                1.000000*np.tanh(np.where(np.where(((data["Volume_21_MN"] - data["Close_28_SD"]) - data["Close_7_SD"] * (data["Close_7_SD"] - data["Close_28_SD"]) *  0.550551 ) > data["Close_28_SD"], data["Close_7_SD"], 0 ) <= data["Close_28_SD"],  0.550551  * data["Close_7_SD"] * data["Volume_21_MN"], 0 )) +
                1.000000*np.tanh(data["Close"] * (((((0.023649) - data["Low_14_SD"]) + (0.023649)) - data["Low_14_SD"]) - np.where((data["Close_7_MN"] + (0.014573)) > data["Close"], ((((data["Close"] + (0.023649)) + (0.014573)) + (0.023649)) + data["Low_14_SD"]), 0 )) / 2.0) +
                1.000000*np.tanh(np.where((0.124515) <= data["High_21_SD"], np.where(data["High_Div2"] * 2.0 <= data["High_21_SD"], np.where(data["High_Div2"] > (0.011265), (0.036031), 0 ), 0 ), 0 )) +
                1.000000*np.tanh((0.011828) * ((0.011828) - data["Open_7_SD"]) * 2.0) +
                1.000000*np.tanh(data["High_21_MN"] * np.where(data["Close_28_SD"] > data["Open_28_SD"], ((0.030676) + (data["High_21_MN"] + np.where(data["High_21_MN"] * -1. > data["Close_Div"], ((0.030676) + ((0.021152) + np.where(data["Volume_7_MN"] > data["Close_Div"], (data["High_21_MN"] - (-0.034093) * 2.0), 0 ))), 0 ))), 0 )) +
                1.000000*np.tanh((0.011482) * -1. * np.where((data["High_28_MN"] + data["Close_7_SD"])/2.0  <= (0.014976), np.where((data["High_28_MN"] + data["Close_7_SD"])/2.0  <= data["Close_7_SD"], np.where((0.011482) * -1. / 2.0 / 2.0 <= (data["Close_14_MN"] + data["Open_Div2"]), data["Close_14_MN"] * 2.0 * 2.0 * 2.0, 0 ), 0 ), 0 )) +
                1.000000*np.tanh(data["Close_Div2"] * -1. * np.where(0.000000 <= ((0.015537) + (data["High_28_MN"] + (data["Low_21_MN"] + data["Low_21_MN"])))/2.0  * data["High_28_MN"] * (data["Close_Div2"] + ((0.015537) + (data["High_28_MN"] + data["Low_21_MN"]))/2.0 )/2.0  * -1., (0.002704), 0 ) * 2.0) +
                1.000000*np.tanh((0.048464) * (data["Volume_28_MN"] - (data["High_7_SD"] - data["Low_7_SD"] * 2.0) * data["Low_7_SD"] * 2.0 * 2.0 * 2.0) * (data["Volume_28_MN"] - data["Volume_28_MN"] * data["Volume_28_MN"] * data["Volume_28_MN"] * 2.0 * data["Volume_28_MN"] * 2.0)) +
                0.992126*np.tanh(np.where((-0.004641) <= data["Open_14_MN"], np.where(data["Volume_14_MN"] <= (data["High"] + data["Open_14_SD"] * 2.0)/2.0 , data["Open_14_SD"] * (((data["High"] * 2.0 + data["Open_14_SD"] * 2.0)/2.0  + data["High"] * 2.0 * 2.0)/2.0  + (0.030676) * 2.0)/2.0  * -1. / 2.0, 0 ), 0 )) +
                1.000000*np.tanh((0.026458) * data["Close"] * ((0.888574) + np.where(data["Close"] <= data["Volume_7_MN"], np.where((data["Low_21_SD"] * 2.0 - np.where(data["Volume_7_MN"] * data["Close"] <= (-0.002040), data["Volume_7_MN"], 0 )) > (0.026458), ((0.888574) * -1. + (0.888574) * -1.), 0 ), 0 ))/2.0 ) +
                1.000000*np.tanh((0.014573) * (data["Low_7_SD"] + ((((data["High_21_MN"] + data["Open_Div2"] * data["Volume_14_MN"] * 2.0) + data["Open_Div2"] * data["Low_7_SD"]) * 2.0 + data["Open_Div2"] * data["Open_Div2"] * -1.) * 2.0 + data["Open_Div2"] / 2.0 * -1.))/2.0 ) +
                1.000000*np.tanh((0.065708) * np.where((0.023188) > (data["Low_Div"] * -1. + (np.where((0.023188) <= np.where(data["High_21_SD"] <= data["Close_14_SD"], data["Close_14_SD"], 0 ), data["Close_14_SD"], 0 ) + np.where(data["Low_Div"] * -1. <= data["Close_14_SD"], np.where(data["High_21_SD"] <= data["Close_14_SD"], (0.065708), 0 ), 0 ))/2.0 ), data["Low_14_MN"] * -1., 0 )) +
                0.968504*np.tanh(np.where((0.076136) * data["High_21_SD"] > ((0.076136) - data["Close_28_SD"]), ((0.011382) + np.where(np.where(data["High_7_MN"] <= data["High_21_MN"], data["High_Div2"], 0 ) > (data["High_7_MN"] - data["Close_28_SD"]), (data["High_21_MN"] + data["High_21_SD"] * np.where(data["High_7_MN"] <= data["High_21_MN"], data["High_Div2"], 0 ))/2.0 , 0 )), 0 )) +
                1.000000*np.tanh(np.where(data["Open_Div2"] / 2.0 <= (0.007087), np.where(data["Open_Div2"] / 2.0 / 2.0 * data["Open_Div2"] / 2.0 <= (0.014976), np.where(data["High_Div2"] * data["Open_Div2"] / 2.0 <= (0.014976), data["High_Div2"] * data["Close_7_MN"], 0 ), 0 ), 0 )) +
                0.921260*np.tanh((0.088492) * np.where(np.where(np.where(data["Volume"] > (0.088492), ((0.088492) + data["Close_Div2"])/2.0 , 0 ) > (0.009893), ((0.088492) - data["Close_Div2"]), 0 ) > (data["Volume"] + data["Close_Div2"])/2.0 , data["Low_28_MN"], 0 )))

    def GPV(self, data):
        return (0.976378*np.tanh((0.026458) * ((data["Close_Div"] + np.where(data["Volume_28_MN"] <= data["Close_Div"], np.where(data["Close_Div2"] <= data["Open_28_SD"] * 2.0, data["Close_21_SD"] * 2.0, 0 ) * 2.0 * 2.0, 0 ))/2.0  + np.where(data["High_21_SD"] <= (0.026458) * 2.0, data["Open"], 0 ) * 2.0) * -1. / 2.0) +
                0.960630*np.tanh((((0.065708) + (((0.065708) + data["Volume_14_MN"])/2.0  / 2.0 + (0.065708)))/2.0  + (data["Volume_14_MN"] + (0.065708)))/2.0  * np.where(data["High_14_SD"] <= np.where(((0.065708) + data["Volume_14_MN"])/2.0  <= ((0.065708) + data["Volume_7_MN"])/2.0 , (0.014119) / 2.0, 0 ), (0.012228), 0 )) +
                0.992126*np.tanh(np.where(data["Low_7_SD"] <= (0.022992), np.where(data["Close_7_MN"] <= data["Low_7_SD"], np.where(data["Close_7_MN"] > np.where(data["Close_28_SD"] <= data["Low_7_SD"], data["Close_7_MN"], 0 ), np.where(data["High_Div2"] > data["Close_7_MN"], np.where(data["Low"] > data["High_21_SD"], data["Low"] * data["Close_7_MN"], 0 ), 0 ), 0 ) * 2.0 * 2.0 * 2.0, 0 ) * 2.0, 0 )) +
                1.000000*np.tanh(data["Open_7_SD"] * ((0.024996) - ((0.085013) + (data["High_28_MN"] + data["Open_7_SD"] * 2.0 * data["Open_7_SD"] * data["Open_7_SD"] * 2.0 * 2.0 * 2.0 * 2.0 * data["Open_7_SD"] * 2.0 * 2.0) * -1. * 2.0)/2.0 ) / 2.0) +
                1.000000*np.tanh(np.where(((0.309433) - data["Open_14_MN"]) > ((0.309433) * (0.309433) + data["Volume_14_MN"])/2.0 , np.where(data["Volume_14_MN"] > (((0.309433) - data["Open_14_MN"]) - data["High_28_MN"]), ((((0.009893) + data["Low_7_SD"])/2.0  + data["Low_7_SD"])/2.0  + data["Low_7_SD"])/2.0  / 2.0, 0 ), 0 )) +
                1.000000*np.tanh(data["Open_28_MN"] * np.where(data["Close_Div2"] * -1. > data["Open_28_SD"] * 2.0, (np.where((0.014119) > data["Open_28_SD"], (data["Close_Div2"] * -1. * 2.0 * 2.0 + (0.192057) * 2.0 * 2.0), 0 ) + (0.192057) * 2.0)/2.0 , 0 ) / 2.0) +
                0.992126*np.tanh(((np.where(data["High_7_MN"] > data["High_28_MN"], (0.018097), 0 ) - data["High_7_MN"] * -1.) + ((data["High_28_MN"] * -1. - data["High_28_MN"]) - data["High_28_MN"])) * ((np.where((0.018097) > data["Close_28_SD"], data["High_7_MN"], 0 ) + data["High_7_MN"]) + data["High_7_MN"]) * -1.) +
                1.000000*np.tanh((0.007383) * ( 0.017476  + (0.035858) * (data["Volume"] * (((0.156671) + data["Volume"] * data["Volume"]) * (data["Low_7_SD"] - data["Volume"]) + data["Low_7_SD"]) - data["Volume"]))) +
                0.874016*np.tanh(np.where((0.013494) > data["High_28_MN"] * -1., np.where(data["Low_Div2"] <= data["High_28_MN"] * -1., np.where((0.111497) * -1. <= data["Low_Div2"], (0.111497), 0 ) * data["High_28_MN"] * -1. * -1., 0 ), 0 )) +
                1.000000*np.tanh(data["Volume_14_MN"] * (0.013325) * (((0.085013) - np.where((data["Close_21_SD"] + data["Volume_Div"])/2.0  <= (0.013325), np.where(data["Open_Div"] <= (0.009621), data["Close_21_SD"] * 2.0 * 2.0 * 2.0, 0 ), 0 )) - np.where(data["Open_Div"] <= data["Close_21_SD"], data["Close_21_SD"], 0 )) * 2.0 * 2.0) +
                0.874016*np.tanh((data["Open_14_MN"] + data["Open_14_MN"]) * ((0.032616) + ((data["Close"] * -1. + data["Close_7_SD"]) * 2.0 - data["Open_14_MN"] * -1. * 2.0 * 2.0 * 2.0 * 2.0) * data["Open_14_MN"] * -1. * 2.0 * 2.0) * -1.) +
                0.929134*np.tanh(data["Low_28_MN"] * ((0.009001) - np.where(np.where(data["High_21_MN"] <= np.where(data["High_21_MN"] <= np.where(data["Low_28_MN"] <= (0.021152), (0.021152), 0 ), data["Open_28_SD"], 0 ), data["Low_28_MN"], 0 ) > (0.007087), ((data["Open_28_SD"] - (0.009308) * -1.) - (0.009308) * -1.), 0 )) * 2.0 * 2.0) +
                1.000000*np.tanh(data["High_7_SD"] * (data["Open_28_SD"] * (data["Open_28_SD"] + (data["Close_7_MN"] + ((0.008004) + (data["Open_28_SD"] + ((0.008004) * 2.0 * 2.0 * 2.0 * 2.0 + (0.008004)))))) * -1. * 2.0 * 2.0 + data["Close_21_SD"])) +
                0.874016*np.tanh(data["Close_7_MN"] * np.where((-0.004344) <= (0.000000 + data["Low_Div2"])/2.0 , np.where(0.000000 > ((data["Open_Div2"] + data["High_28_MN"])/2.0  + data["Close_7_MN"])/2.0 , ((np.where(data["Open_Div2"] <= (0.013494), (0.013494) * 2.0, 0 ) + (0.013494)) + (0.013494)), 0 ), 0 ) * 2.0) +
                1.000000*np.tanh(data["High_7_MN"] * ((0.025567) * -1. + (((0.025567) * -1. + (data["Open_28_SD"] * -1. + (0.025567) * -1. / 2.0)) + (((data["Open_28_SD"] * -1. + data["Close_7_MN"]) + data["Volume_14_MN"]) + data["High_7_SD"])) / 2.0) / 2.0) +
                1.000000*np.tanh(np.where(np.where(np.where(data["Close_7_SD"] > data["Low_7_SD"], data["Close_7_SD"], 0 ) > (0.019793), np.where((data["High_Div2"] + (0.019793)) > data["Low_7_SD"], (0.005431), 0 ), 0 ) > ((data["High_Div2"] + (0.019793)) + data["Close_7_SD"])/2.0  * (data["Close_7_SD"] - (0.005431)), (0.019793), 0 ) * (0.019793)))

    def GPVI(self, data):
        return (1.000000*np.tanh(np.where(data["Low_14_SD"] <= data["Low_14_SD"] * data["Close_Div"] * -1. * 2.0, data["Low_14_SD"] * data["Close_Div"] * -1. * 2.0 * 2.0, 0 ) * (data["Close_7_SD"] + data["Close_Div"]) * -1. / 2.0) +
                1.000000*np.tanh(data["High_21_SD"] * (data["High_21_SD"] / 2.0 - (np.where(data["Open"] > data["High_21_SD"], data["Open"], 0 ) * 2.0 + ((0.009781) + ((0.009781) + (data["Volume_28_MN"] + data["Open"])/2.0  * -1.)/2.0  * 2.0)/2.0  * 2.0))) +
                0.968504*np.tanh(np.where((data["High_7_SD"] - data["Close_7_MN"]) <= (-0.020496), (data["Close_28_SD"] - np.where((data["High_7_SD"] - data["Close_28_SD"]) <= (-0.020496), ((data["High_7_SD"] - data["High_7_SD"] * -1.) - data["High_7_SD"] * -1.) * -1., 0 )) * -1., 0 )) +
                1.000000*np.tanh(np.where(np.where(data["Low_28_MN"] > (0.014573) * 2.0, data["High_14_SD"], 0 ) > (0.029728), (0.029728), 0 )) +
                1.000000*np.tanh(np.where((0.026995) > data["Open_Div2"] * (0.088492) * 2.0 * 2.0 * 2.0 * -1. * 2.0, (0.026995), 0 ) * np.where(data["High_7_MN"] > (data["High_7_SD"] + data["Open_Div2"] * data["High_7_SD"] * 2.0 * 2.0 * -1.)/2.0 , (0.026995), 0 ) * -1.) +
                0.929134*np.tanh(data["Open_14_SD"] * 2.0 * data["Open_14_SD"] * 2.0 * np.where(np.where(data["Open_28_SD"] * 2.0 > data["Low_Div"], np.where(data["Open_Div2"] > data["Open_14_SD"] * 2.0, data["Low_Div"], 0 ), 0 ) > data["Open_14_SD"], data["Open_14_SD"] * 2.0, 0 ) * 2.0 * 2.0 * 2.0 * 2.0) +
                1.000000*np.tanh(np.where(data["Close_21_SD"] <= data["Low_14_MN"], (0.085013) * (np.where((data["Volume_7_MN"] - data["Volume_21_MN"]) <= data["Volume_21_MN"], data["Volume_7_MN"], 0 ) - np.where(np.where(((data["Volume_7_MN"] - data["Volume_21_MN"]) - data["Volume_21_MN"]) <= data["Volume_21_MN"], data["Volume_7_MN"], 0 ) / 2.0 > data["Volume_21_MN"], data["Volume_7_MN"], 0 )) / 2.0, 0 )) +
                1.000000*np.tanh(np.where(data["Open_14_SD"] <= np.where(data["Close_14_SD"] <= (data["Close_Div"] + ((0.065708) + data["Close_14_SD"])/2.0 )/2.0 , data["Close_21_SD"], 0 ), np.where(data["Open_14_SD"] <= (0.020382), np.where((data["Close_Div"] + ((0.065708) + data["Close_14_SD"])/2.0 )/2.0  <= (0.065708), data["Close_Div"], 0 ), 0 ), 0 ) * data["Close_Div"]) +
                1.000000*np.tanh(np.where(((0.008358) + ((0.008358) + (data["High_21_SD"] + data["Close_Div2"])/2.0 )/2.0 )/2.0  <= (0.008004), data["Close_21_SD"], 0 ) * np.where((((0.008358) + ((0.008004) + (0.008358))/2.0 )/2.0  + ((data["Open"] + data["Close_Div2"])/2.0  - data["High_28_MN"]))/2.0  <= data["High_28_MN"], data["High_21_SD"], 0 )) +
                0.960630*np.tanh(data["High_14_SD"] * (((((data["Close_21_SD"] + ((data["High_Div2"] + (data["High_14_SD"] - data["Open_28_SD"]))/2.0  - data["Open_28_SD"])) + (data["High_14_SD"] - data["Close_Div"]))/2.0  - data["Open_28_SD"]) + ((data["Close_21_SD"] + data["Close_21_SD"]) - data["Open_28_SD"]))/2.0  - data["Open_28_SD"])) +
                1.000000*np.tanh(np.where(data["Low_7_SD"] <= data["Open_Div"], data["Low_7_SD"], 0 ) * np.where(data["Open_14_MN"] <= data["Open_Div"], np.where((0.024390) <= data["Open_Div"], np.where((0.012135) <= data["Open_14_MN"], ((data["Low_7_SD"] + (0.024390) * -1.) + (0.024390) * -1.), 0 ) * 2.0, 0 ) * 2.0, 0 ) * 2.0 * -1.) +
                0.960630*np.tanh((((-0.024847) / 2.0 - (-0.024847)) + np.where(data["Open"] <= (-0.024847), np.where(data["Open"] <= data["Volume_21_MN"] / 2.0, data["Open"] * 2.0 * 2.0, 0 ), 0 ) * -1.)/2.0  * np.where(((-0.007573) / 2.0 - (-0.024847)) > data["Volume_21_MN"], data["Close_14_SD"], 0 )) +
                1.000000*np.tanh(np.where(data["Volume_28_MN"] <= np.where(data["Close_Div"] <= (0.009688), (0.009688), 0 ), np.where(data["Open_21_MN"] <= data["Close_Div"] * data["Close_Div"] * 2.0, np.where(data["Open_21_MN"] / 2.0 <= data["Close_Div"], np.where((0.009688) <= data["Open_14_SD"], data["Open_14_SD"] * data["Open_21_MN"] * 2.0, 0 ) * 2.0, 0 ), 0 ) * 2.0, 0 )) +
                1.000000*np.tanh((0.013896) * ((0.008004) - np.where(((0.076136) - np.where(((0.076136) - (data["Close_21_SD"] + (0.013896))/2.0 ) <= data["Close_21_SD"], (0.076136), 0 )) <= np.where(((0.076136) - data["Open_Div2"]) <= data["Close_Div"], data["Close_Div"], 0 ), (0.076136), 0 ) * 2.0)) +
                1.000000*np.tanh(np.where(np.where(data["Volume_14_MN"] > (0.065708), np.where(data["Open_Div"] > (0.065708), data["Open_Div"], 0 ) * 2.0 * 2.0, 0 ) * 2.0 <= data["Close_Div2"], np.where((0.018097) <= data["Open_Div"], (((0.018097) + (0.012228))/2.0  - ((0.018097) * 2.0 + data["High_7_MN"])/2.0 ), 0 ), 0 ) / 2.0 / 2.0) +
                1.000000*np.tanh(np.where(np.where(data["Close_21_SD"] > data["Close_28_SD"], np.where(data["Close_21_SD"] > data["High_14_SD"], np.where(data["Close_21_SD"] > data["High_21_SD"], data["High_14_SD"], 0 ), 0 ), 0 ) > data["Close_7_SD"], np.where(data["High_14_SD"] > data["Close_14_SD"], data["High"] * 2.0 * 2.0, 0 ) * 2.0 * data["Close_7_SD"] * -1., 0 ) * -1.))

    def GPVII(self, data):
        return (0.937008*np.tanh((-0.026169) * np.where(np.where((data["Open"] + data["Low_14_SD"]) > (0.026458), ((0.026458) + ((0.011587) + ((0.011587) + np.where(data["Low_7_SD"] > data["Low_21_SD"], data["Low_14_SD"], 0 )))), 0 ) > data["Low_14_SD"], ((data["Open"] + data["Close"]) + data["Close"]), 0 )) +
                1.000000*np.tanh(np.where(data["Volume_21_MN"] * -1. <= np.where(data["Volume_21_MN"] <= data["Volume_7_MN"], data["Volume_21_MN"] / 2.0, 0 ), np.where(data["Volume_7_MN"] * -1. * -1. / 2.0 * -1. <= (0.030141), np.where((0.003301) <= data["Close_28_MN"], (0.030141) / 2.0 * data["Volume_21_MN"] * -1., 0 ) * 2.0, 0 ), 0 ) * -1.) +
                0.929134*np.tanh(data["Close_21_SD"] * np.where((0.014119) <= np.where((data["Volume_28_MN"] + ((-0.006882) - (0.035858)))/2.0  <= data["Close_21_SD"], (data["Volume_28_MN"] + ((-0.006882) - (0.035858)))/2.0 , 0 ), np.where((0.035858) <= data["Low_7_SD"], ((data["Close_14_SD"] + data["Volume_28_MN"])/2.0  + data["Close_14_SD"])/2.0 , 0 ), 0 )) +
                1.000000*np.tanh(data["High"] * ((data["Low"] * ((((((((data["Close_21_SD"] + data["High"])/2.0  - data["Low_21_MN"]) - data["Low_21_MN"]) - data["Low_21_MN"]) - data["Low_21_MN"]) - data["Close_7_MN"]) - data["Low_21_MN"]) - data["Low_21_MN"]) - data["Low_21_MN"]) - data["Low_21_MN"])) +
                1.000000*np.tanh((0.032616) * np.where(data["Open_Div"] > (-0.009321), np.where(np.where(np.where(np.where(data["Open_Div"] <= (0.018057), data["High_Div"], 0 ) <= data["High"], data["Low_28_MN"], 0 ) <= data["High"], data["High_Div"], 0 ) <= data["High"], np.where(data["High"] <= (0.025688), (0.013494) * -1., 0 ), 0 ), 0 )) +
                0.968504*np.tanh(np.where(data["Volume_28_SD"] * ((0.021027) + (0.003301) * 2.0 * 2.0) * 2.0 * 2.0 * 2.0 <= data["Volume_28_MN"],  0.656983  * ((0.003301) * 2.0 - (0.018723)), 0 ) * -1. / 2.0) +
                1.000000*np.tanh(np.where(data["Low_28_SD"] <= data["Open_Div2"], np.where((data["Open_Div2"] + ((data["Open_Div2"] - (0.124515)) - (0.124515))) <= (0.124515), np.where(data["Low_14_SD"] > (0.124515), ((data["Low_28_SD"] - data["Open_Div2"]) - (0.124515)), 0 ), 0 ), 0 )) +
                0.850394*np.tanh((data["High_Div"] + ((0.085013) / 2.0 + (0.085013))) * np.where(data["High_28_SD"] > (0.085013), np.where(((0.014119) / 2.0 + (0.085013)) > data["High_28_SD"], (data["Volume_7_MN"] + data["High_Div"] * 2.0)/2.0 , 0 ), 0 ) * 2.0 * 2.0) +
                1.000000*np.tanh(np.where(data["High_7_SD"] > data["Open_28_MN"], (data["Open_28_MN"] - np.where(data["High_7_SD"] > (0.007483), (data["Open_28_MN"] * -1. - (0.025688)), 0 )), 0 ) * (data["Open_28_MN"] + (data["Open_28_MN"] - np.where(data["Open_28_MN"] > (0.025688), (data["High_7_SD"] - data["Open_28_MN"]), 0 ) * 2.0))) +
                0.968504*np.tanh((data["Open_28_SD"] + (data["Open_28_SD"] + (data["Open_28_SD"] + data["Open_28_SD"])) * data["Volume_7_SD"] * data["Volume_7_SD"]) * ((-0.002087) - ((0.009893) - np.where((0.015195) > (data["Open_28_SD"] + data["High_28_MN"]), (0.009893), 0 ))) / 2.0 * 2.0) +
                1.000000*np.tanh(data["Low"] * ((np.where((0.026458) > ((np.where(data["Open_14_MN"] > (0.007958), np.where((0.026458) <= data["Low_28_MN"], data["Low"], 0 ), 0 ) * -1. + data["Low_14_MN"]) + data["Open_28_SD"])/2.0 , np.where((0.007958) <= data["Open_28_MN"], data["Low"], 0 ), 0 ) * -1. + data["Low_14_MN"]) + data["Open_28_SD"])/2.0 ) +
                0.952756*np.tanh(np.where(data["High_28_MN"] > data["High_14_SD"], np.where(data["High_28_MN"] > (0.048051), data["High_28_MN"] * -1., 0 ) * 2.0, 0 ) * 2.0) +
                1.000000*np.tanh(np.where(data["High_21_SD"] <= (0.016229), np.where(np.where(data["Volume_21_MN"] * -1. > data["High_7_SD"], data["High_14_SD"], 0 ) <= np.where(data["High_7_SD"] <= data["High_21_SD"], np.where((0.018097) > data["High_14_SD"], (0.018097) * data["Volume_21_MN"] * -1., 0 ), 0 ), (0.018097) * data["Volume_21_MN"] * -1., 0 ), 0 )) +
                1.000000*np.tanh(data["Open_14_MN"] * (np.where(np.where(((data["Open_14_MN"] + (-0.011530))/2.0  + (0.111497)) <= data["Volume_21_MN"], data["High_21_SD"], 0 ) <= data["Volume_21_MN"], data["High_21_SD"], 0 ) -  10.0  * np.where((data["Open_14_MN"] / 2.0 + (0.111497)) <= data["Volume_21_MN"], data["High_21_SD"], 0 ) / 2.0 / 2.0)) +
                0.921260*np.tanh((((data["High_7_MN"] + (-0.023589) / 2.0) + (data["High_7_MN"] + (data["High_7_MN"] + data["High_7_MN"])) * (data["High_7_MN"] + (data["High_7_MN"] + (data["High_7_MN"] + data["High_7_MN"])))) + (data["High_7_MN"] + data["Close_14_MN"])) * (-0.023589) / 2.0) +
                1.000000*np.tanh(np.where(((0.011265) - ((data["Low_7_SD"] + (data["Low_7_SD"] + (0.021697))/2.0 )/2.0  - data["Open_28_MN"])) > (0.021697), (data["Low_7_SD"] + ((data["Low_14_SD"] + data["Low_7_SD"]) - (data["Open_28_MN"] - (0.021697)))), 0 )))

    def GPVIII(self, data):
        return (1.000000*np.tanh(np.where(((data["High_21_SD"] + data["High_21_SD"]) - ((0.010138) * 2.0 + data["Close"])) <= (0.010138) * 2.0 * 2.0, (data["Low_21_SD"] + (data["High_14_SD"] + data["High_14_SD"])) * np.where(data["Open"] > (data["Low_14_SD"] + data["Low_21_SD"])/2.0 , data["High_7_SD"] * -1., 0 ), 0 )) +
                0.960630*np.tanh(data["Close_28_SD"] * ((data["Close_28_SD"] - data["Volume_14_MN"] * -1.) + (data["Close_28_SD"] - (0.076136)) * 2.0) * -1. * ((data["Close_28_SD"] - data["Close_28_SD"] * (data["Close_28_SD"] + data["Volume"] * 2.0) * -1.) * -1. - (0.076136))) +
                1.000000*np.tanh(data["High"] * data["Low_7_SD"] * (np.where((0.124515) <= data["High"], np.where(data["Open_14_MN"] <= np.where(data["High"] <= data["Open_14_MN"], (0.124515), 0 ), data["Low_7_SD"] * 2.0, 0 ) * 2.0 * 2.0, 0 ) * 2.0 * 2.0 + data["Open_28_SD"]) * -1. * 2.0 * -1.) +
                0.952756*np.tanh((0.017963) * (0.460113) * np.where(data["Volume_28_MN"] <= (0.460113), np.where(data["Volume_28_MN"] <= data["Volume_21_MN"], np.where(data["Volume_21_MN"] <= data["Volume_28_MN"], np.where(data["Volume_28_MN"] * -1. <= data["Volume_28_MN"], data["Volume_28_MN"] * -1. * 2.0, 0 ), 0 ) * 2.0, 0 ), 0 ) * -1.) +
                0.968504*np.tanh((data["Close_7_MN"] + (data["Close_7_MN"] + ((data["Close"] + data["Volume_14_MN"] * -1.)/2.0  + data["Close"])/2.0 )) * -1. * np.where((0.014191) <= data["Close_7_MN"], (((0.014191) + data["Close"]) + data["Volume_14_MN"] * -1.)/2.0 , 0 )) +
                1.000000*np.tanh((-0.012377) * 2.0 * ((((-0.012377) + data["Volume_14_MN"]) + data["Volume_14_MN"]) * data["Open_28_SD"] * -1. + data["Open_28_SD"]) * 2.0 * ((((data["Volume_14_MN"] + data["Open_28_SD"]) + data["Open_28_SD"]) + data["Close_Div"]) + data["Close_Div"]) * 2.0) +
                1.000000*np.tanh(np.where(data["Close_28_SD"] <= np.where((0.059945) <= data["Close_Div2"], (0.059945) / 2.0, 0 ), (0.059945) / 2.0, 0 ) * (0.059945)) +
                1.000000*np.tanh(((data["Open_14_SD"] - data["Open_14_SD"] * -1. * 2.0 * 2.0) + (data["Open_14_SD"] - data["Close_7_MN"] * 2.0 * 2.0)) * np.where(np.where(data["Close_28_MN"] <= (0.012004), (-0.003219), 0 ) * -1. <= np.where(data["Close_28_MN"] * -1. <= data["Close_7_MN"], data["Close_7_MN"], 0 ), data["Close_28_MN"], 0 )) +
                1.000000*np.tanh(np.where(data["Volume_7_MN"] <= data["Low_7_SD"], data["Low_7_SD"] * (data["Close_7_MN"] + np.where((data["Close_Div2"] + data["Volume_7_MN"] / 2.0)/2.0  > data["Volume_7_MN"], np.where((0.085013) > (data["Low_7_SD"] + (data["Volume_7_MN"] + data["Open_Div2"])/2.0 )/2.0 , (data["Low_7_SD"] + data["Open_Div2"])/2.0 , 0 ), 0 ))/2.0  * 2.0 * -1., 0 )) +
                1.000000*np.tanh((0.085013) * 2.0 * -1. * data["Low_21_SD"] * (0.019490) * (( 5.0  - np.where(np.where((0.085013) > data["Low_21_SD"], data["Open_Div2"], 0 ) > data["Low_21_SD"],  5.0 , 0 )) - np.where(data["Open_Div2"] > data["Low_7_SD"],  5.0  * 2.0, 0 )) / 2.0 * 2.0) +
                1.000000*np.tanh(((data["Volume_21_MN"] + (0.008004) * 2.0) + (0.008004) * 2.0) * 2.0 * np.where(data["Volume_21_MN"] > data["Close_28_SD"] * 2.0 * 2.0, np.where(data["Volume_7_MN"] > (data["Volume_21_MN"] + (0.008004)) * 2.0, (0.014573) * -1., 0 ), 0 )) +
                1.000000*np.tanh(np.where(np.where(((0.065708) + ((0.065708) + data["Volume_Div"])/2.0  * (0.065708))/2.0  / 2.0 <= data["Open_21_SD"], np.where(data["High_21_MN"] <= (0.009893), ((0.065708) + data["High_21_MN"] * data["Open_21_SD"])/2.0 , 0 ), 0 ) <= data["Volume_Div"], data["High_21_MN"] * data["Low_7_SD"], 0 )) +
                1.000000*np.tanh(np.where(data["Low_14_SD"] > (0.004684), data["Close_28_SD"] * 2.0, 0 ) * np.where(data["Close_7_MN"] > (0.004684) * -1., data["Open_28_SD"] * 2.0, 0 ) * (data["Low_14_SD"] + np.where(data["Open_28_SD"] > data["Low_14_SD"], np.where(data["Close_7_MN"] > data["Close_28_SD"],  3.0  * -1., 0 ), 0 ))) +
                1.000000*np.tanh(np.where(data["Low_28_SD"] > np.where(data["High_28_MN"] > data["Low_28_SD"], data["Close_21_SD"], 0 ), np.where(np.where(data["High_28_MN"] / 2.0 > (0.013500), data["Close_21_SD"], 0 ) > data["Close_7_SD"], data["High_28_MN"], 0 ), 0 )) +
                1.000000*np.tanh(data["High_14_SD"] * np.where(data["High_14_SD"] <= data["Open_Div2"], np.where(data["Volume_14_MN"] <= data["Open_Div2"], (data["High_21_SD"] - data["Open_Div2"] * 2.0 * 2.0 * 2.0 * np.where(data["Volume_14_MN"] <= data["High_14_SD"] * 2.0, np.where(data["Open_Div2"] <= data["High_21_SD"] * 2.0, data["Open_Div2"] * 2.0, 0 ), 0 )), 0 ), 0 )) +
                0.937008*np.tanh((0.088492) * ((0.015195) + ((((0.015195) + np.where((0.015195) <= data["Open_28_MN"], (0.088492) * -1., 0 )) + np.where((0.015195) <= data["Open_28_MN"], (0.088492) * -1., 0 )) + np.where((0.015195) <= data["Open_28_MN"], (0.088492) * -1., 0 ))) * data["Volume_7_MN"]))

    def GPIX(self, data):
        return (1.000000*np.tanh(np.where((0.156671) <= np.where(data["Low_21_SD"] / 2.0 > data["Close"], data["Volume_28_MN"] * 2.0, 0 ), data["Low_21_SD"], 0 ) * np.where(data["Open_28_SD"] <= np.where(data["Volume_28_MN"] <= data["Volume_7_MN"], data["Low_21_SD"], 0 ) / 2.0, data["Volume_7_MN"], 0 )) +
                0.913386*np.tanh(np.where((data["High_7_MN"] + ((0.009893) + (np.where(data["Low"] > (0.008123), ((0.009893) + data["Close_21_SD"] / 2.0), 0 ) + ((0.009893) + ((0.009893) + (0.009893) / 2.0) / 2.0))/2.0  / 2.0)) > (0.024390), (0.001540) * -1., 0 )) +
                1.000000*np.tanh(np.where(data["High"] <= np.where(((0.023188) + (data["Close"] + (0.009893))/2.0 )/2.0  <= data["High_21_SD"], (0.012504), 0 ), ((0.059945) + (data["High"] + (0.059945))/2.0 )/2.0 , 0 ) * np.where((0.012504) <= data["Close_7_MN"], data["Volume_14_MN"], 0 )) +
                1.000000*np.tanh(np.where((0.111497) > data["Open_7_SD"], np.where(data["Close_21_SD"] > (0.111497), np.where((((0.004684) + (0.009893))/2.0  + (0.016229))/2.0  * -1. > data["Open_7_MN"], (0.111497), 0 ), 0 ), 0 )) +
                0.897638*np.tanh((data["High_28_MN"] * data["Close_28_MN"] * 2.0 * 2.0 + ((0.002157) * (((data["Close_7_SD"] *  3.0  * 2.0 * -1. + data["Close_7_SD"]) + data["Close_28_MN"]) + data["Close_28_MN"] * 2.0) + data["Close_7_SD"] * data["Close_28_MN"] * 2.0))) +
                1.000000*np.tanh(np.where(data["Open"] > np.where((0.014573) > data["Open"], data["High"], 0 ), ((0.025567) - (data["Open"] * -1. + np.where(data["Open"] * -1. > data["High"] * -1. / 2.0, data["Volume_28_MN"] * -1., 0 ))/2.0 ), 0 ) * data["High"] * -1. / 2.0) +
                1.000000*np.tanh(np.where(data["Close_21_SD"] > data["High_14_SD"], np.where(data["Close_28_SD"] > (data["Low_Div2"] + (0.025567))/2.0  / 2.0 / 2.0, np.where((data["Low_Div2"] + data["Close_28_SD"] / 2.0)/2.0  > (0.030759), np.where(data["Close_21_SD"] > (0.016229), (data["High_7_SD"] + (0.030759) * -1.)/2.0  / 2.0 * -1., 0 ), 0 ), 0 ), 0 )) +
                1.000000*np.tanh(np.where(data["High_7_SD"] > (0.124515), np.where(data["Volume_21_MN"] > (0.124515), (((0.124515) + np.where(((0.124515) + (0.018723)) > data["High_7_SD"], data["High_7_SD"], 0 )) + (0.124515)) * ((0.124515) + np.where(((0.124515) + (0.018723)) > data["Volume_21_MN"], (0.124515), 0 )), 0 ), 0 )) +
                0.803150*np.tanh(data["Open_7_MN"] * data["Volume_28_SD"] * data["Volume_28_SD"] * data["Volume_28_SD"] * data["Volume"] * (data["Volume_28_SD"] * data["Volume"] * data["Volume"] * data["Open_Div2"] * -1. + (data["Volume"] + data["Volume_28_SD"])/2.0 )/2.0  * -1. * -1.) +
                0.889764*np.tanh(((0.076136) + (0.076136)) * np.where((0.076136) * ((0.012847) + np.where((0.012847) > data["High_28_MN"], (0.076136), 0 )) * -1. > data["Low_Div"], (data["High_28_MN"] + (data["High_28_MN"] + np.where((0.012847) * -1. > data["Low_Div"], data["Open"] * -1., 0 ))/2.0 )/2.0 , 0 )) +
                1.000000*np.tanh((-0.001483) * np.where(np.where((0.001766) > (data["High_Div"] + np.where(data["High_Div"] <= (0.001766), (0.001766), 0 ))/2.0 , data["High_21_SD"], 0 ) > data["High_Div"], np.where((-0.001483) > data["Volume_7_MN"], np.where(data["High_Div"] * 2.0 > data["Volume_7_MN"], data["High_21_SD"] * 2.0, 0 ), 0 ) * 2.0 * 2.0, 0 ) * 2.0) +
                0.992126*np.tanh((0.014191) * np.where(data["Open_Div"] > data["Open_Div"] * (np.where(data["Volume_7_MN"] > data["Open_Div"] * (data["Volume_7_MN"] - data["Volume_Div"]) / 2.0, data["Volume_Div"] / 2.0, 0 ) - data["Volume_Div"]), data["Open_Div"] * (((0.544636) - data["Volume_Div"]) - data["Volume_Div"]), 0 )) +
                0.968504*np.tanh(data["High_Div"] * np.where((0.161798) <= data["High_7_SD"], np.where(data["High_28_MN"] > (0.018723), ((((((data["High_Div"] - data["Volume"]) + data["High_28_MN"]) + data["High_Div"]) - data["Close"]) - (0.018723)) - data["Close"]), 0 ), 0 )) +
                1.000000*np.tanh((data["High_28_MN"] + data["Open_28_SD"]) * np.where((0.038519) > (data["High_28_MN"] + data["Close_7_MN"]), np.where(np.where(np.where(data["Open_7_SD"] > (data["High_28_MN"] + data["Close_7_MN"]), data["High_28_MN"], 0 ) > 0.000000, data["Open_28_SD"], 0 ) > data["Close_21_SD"], data["High_28_MN"], 0 ), 0 ) * 2.0 * 2.0 * 2.0 * -1.) +
                1.000000*np.tanh(np.where( 0.123023  > data["Volume_21_MN"], np.where(data["High_21_SD"] > (0.076136) * -1. * -1., np.where(data["Volume_21_MN"] > (0.085013), np.where(data["Volume_21_MN"] > (0.076136), np.where(data["High_21_SD"] >  0.123023  * (0.085013) * 2.0,  0.123023  * (0.085013) * 2.0 * 2.0, 0 ), 0 ), 0 ), 0 ), 0 )) +
                1.000000*np.tanh(data["Close_14_MN"] * (data["Close_14_SD"] + np.where((0.076136) > data["High_7_SD"], (data["High_28_MN"] + ((0.018723) - np.where(np.where(np.where(np.where(data["Close_14_MN"] > (0.018723), (0.076136), 0 ) > data["Close_14_SD"], data["Close_14_SD"], 0 ) > data["High_28_MN"], data["Close_14_SD"], 0 ) > data["Close_14_MN"], (0.076136), 0 ))), 0 ))))

    def GPX(self, data):
        return (1.000000*np.tanh(((data["Open_28_SD"] - (data["Low_14_SD"] + ((data["Low_14_SD"] + data["High"]) + (data["Volume_7_MN"] + data["Close_21_SD"]))) * ((data["Low_14_SD"] + (data["Close_21_SD"] + (data["Low_14_SD"] + data["Low_14_SD"]))) + data["Close_21_SD"])) + data["High"]) * (-0.020310)) +
                1.000000*np.tanh(data["Low_21_MN"] * ((0.007087) + np.where(data["Low_28_MN"] / 2.0 / 2.0 <= (-0.008523), (data["Low_28_MN"] + (data["Low_28_MN"] + ((data["Low_Div"] + data["Low_28_MN"])/2.0  + (0.007087))/2.0 )/2.0 )/2.0  * 2.0 * 2.0, 0 ))/2.0  * 2.0 * 2.0 * 2.0) +
                1.000000*np.tanh((data["Close_7_SD"] + np.where((0.085013) <= data["Open_Div"], (data["Close_7_SD"] + data["Close_7_SD"]), 0 )) * np.where(data["Close_14_SD"] <= (0.156671), (np.where(data["Open_Div"] <= data["Close_7_SD"], data["Close_7_SD"], 0 ) + data["Close_14_SD"]) * (data["Close_14_MN"] + (data["Close_14_MN"] - data["Close_14_SD"])), 0 ) * 2.0) +
                0.992126*np.tanh(data["Close_28_MN"] * np.where(data["Close_28_MN"] <= data["High_21_MN"] / 2.0, (data["High_Div2"] + np.where(data["Volume_14_MN"] <= data["High_21_MN"] / 2.0 / 2.0, ((((data["High_Div"] + data["High_Div2"]) + (data["High_Div"] + data["High_Div2"])) + data["High_Div2"]) + data["High_Div2"]), 0 )) * -1., 0 )) +
                0.968504*np.tanh(data["High_7_MN"] * np.where(((data["High_7_MN"] * -1. - np.where(data["Close_28_MN"] * 2.0 > data["High_7_MN"], np.where((0.011071) <= (0.013896), data["Close_28_MN"], 0 ), 0 )) - (-0.002087)) <= data["Close_28_MN"] * 2.0 * -1., (0.156671), 0 ) * -1. / 2.0) +
                0.968504*np.tanh(((data["High_28_MN"] + data["Close_21_SD"])/2.0  / 2.0 + (data["High_28_MN"] + (data["High_28_MN"] + data["High_21_SD"] * 2.0) * ((((data["High_28_MN"] + data["High_7_SD"]) + data["High_7_SD"]) + data["High_28_MN"]) + data["High_28_MN"]))) * data["High_21_SD"]) +
                1.000000*np.tanh(data["High_21_MN"] * ((data["High_21_MN"] + data["Open_14_SD"])/2.0  - np.where((data["High"] + (data["High_21_MN"] + (-0.003988))/2.0 )/2.0  > (data["Volume_14_MN"] + data["Open_14_SD"])/2.0 , ((data["Open_14_SD"] + (data["Open_14_SD"] + data["High"])/2.0 ) + data["High"]), 0 )) * 2.0 * 2.0) +
                1.000000*np.tanh(np.where((0.006988) <= data["Open_14_MN"], data["Open_7_SD"], 0 ) * np.where(np.where((0.014573) <= data["Open_14_MN"], np.where(data["Volume"] <= data["Open_14_MN"], np.where(data["Low"] <= data["Open_14_MN"], data["Volume"], 0 ), 0 ), 0 ) / 2.0 / 2.0 <= (data["Close"] - data["Open_14_MN"]), data["High_7_SD"], 0 ) * -1.) +
                1.000000*np.tanh((0.025567) * np.where(np.where(np.where(np.where(np.where((data["High_28_MN"] + data["High_28_MN"]) * 2.0 > data["Close_28_SD"], data["Volume_21_MN"], 0 ) > (data["Close_28_SD"] + data["High_28_MN"]), (0.025567), 0 ) > (data["High_28_MN"] + (0.008123)), data["Volume_21_MN"], 0 ) > (0.025567), (0.025567), 0 ) > data["Close_28_SD"], data["Volume_21_MN"], 0 )) +
                1.000000*np.tanh(data["High_7_SD"] * np.where((((0.018723) - data["Close_7_MN"]) - data["Close_7_MN"]) > (0.047285), (((((data["Close_7_MN"] + (0.047285))/2.0  + data["High_7_SD"])/2.0  + data["High_7_SD"])/2.0  + data["High_7_SD"])/2.0  - np.where((0.025567) <= data["High_7_SD"], data["Close_28_SD"], 0 )), 0 ) * 2.0) +
                1.000000*np.tanh(np.where((0.021027) <= data["Close"], np.where(data["Volume_7_SD"] > data["Volume_7_MN"], np.where((0.021027) > data["Low_7_SD"], np.where((0.111497) > data["Volume_7_MN"], np.where(np.where(data["Close_Div"] > (0.021027), (0.111497), 0 ) > data["Close_Div"], ((0.009893) * -1. + (0.014573))/2.0 , 0 ), 0 ), 0 ), 0 ), 0 )) +
                1.000000*np.tanh(data["Close_21_SD"] * np.where(data["Close_Div"] * -1. > data["Close_21_SD"] / 2.0, (np.where(data["Close_21_SD"] / 2.0 > (0.014191), np.where(np.where((0.111497) > data["Close_21_SD"], (0.111497), 0 ) > data["Close_Div"] * -1., (0.111497), 0 ), 0 ) + data["Close_21_SD"])/2.0 , 0 )) +
                0.913386*np.tanh(data["Open_28_SD"] * ((0.007087) + (((data["Volume_7_MN"] + data["Volume_7_MN"]) * data["Open_28_SD"] * 2.0 * 2.0 * 2.0 + ((0.016229) + (0.016229))) + ((0.016229) + (0.016229))) * data["Open_28_SD"] * 2.0) * -1.) +
                1.000000*np.tanh(np.where(data["Volume_7_SD"] > data["Volume_7_MN"], np.where(data["Open_Div"] > data["Volume_7_SD"], (-0.003773), 0 ), 0 )) +
                1.000000*np.tanh(np.where(data["Low"] <= data["High"], (((data["High"] * 2.0 - (0.011265)) - (0.011265)) - (0.011265)), 0 ) * 2.0 * np.where(data["Volume"] <= data["High"] * 2.0 * 2.0 * data["Volume"], data["High_14_MN"], 0 )) +
                0.960630*np.tanh((-0.019028) * np.where(data["High"] * np.where(data["Low_Div2"] * -1. * data["Volume_28_SD"] <= data["Open_28_MN"], data["High"], 0 ) <= np.where(data["High"] <= data["Open_28_MN"], np.where((-0.019028) <= data["High"], data["High"], 0 ), 0 ), (0.024390), 0 )))
